stages:
  - test
  - build_and_secure
  - release

run_test:
  stage: test
  image: python:3.11-slim
  before_script:
    - pip install -r requirements.txt
  script:
    - pytest

build_and_scan_image:
  stage: build_and_secure
  image: docker:28.2.2-cli
  services:
    - docker:28.2.2-dind
  variables:
    IMAGE_NAME: "docker.io/barywhyte/api"
    IMAGE_TAG: "$CI_COMMIT_SHORT_SHA"
  before_script:
    - export TRIVY_VERSION=$(wget -qO - "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
    - wget --no-verbose https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz -O - | tar -zxvf -
  script:
    - docker buildx build --platform linux/arm64 -t $IMAGE_NAME:$IMAGE_TAG .
    - ./trivy image --download-db-only
    - ./trivy image --scanners vuln --vuln-type library --severity HIGH,CRITICAL --format template --template "@contrib/gitlab.tpl" -o gl-container-scanning-report.json $IMAGE_NAME:$IMAGE_TAG
    - ./trivy image --format cyclonedx --output sbom.json $IMAGE_NAME:$IMAGE_TAG
  allow_failure: false
  artifacts:
    reports:
      container_scanning: gl-container-scanning-report.json
    paths:
      - sbom.json
  needs:
    - run_test

push_image:
  stage: release
  image: docker:28.2.2-cli
  services:
    - docker:28.2.2-dind
  variables:
    IMAGE_NAME: "docker.io/barywhyte/api"
    IMAGE_TAG: "$CI_COMMIT_SHORT_SHA"
  before_script:
    - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS"
  script:
    - docker buildx build --platform linux/arm64 -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push "$IMAGE_NAME:$IMAGE_TAG"
    - |
      if [ "$CI_COMMIT_BRANCH" = "$CI_DEFAULT_BRANCH" ]; then
        docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest
        docker push $IMAGE_NAME:latest
      fi
  needs:
    - build_and_scan_image
