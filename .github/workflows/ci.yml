name: CI Pipeline

on:
  push:
    branches:
      - main
      - operations
  pull_request:

env:
  IMAGE_NAME: docker.io/barywhyte/api

jobs:
  run_test:
    name: Run Tests
    runs-on: ubuntu-latest

    container:
      image: python:3.11-slim

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests with pytest
        run: pytest

  build_and_scan_image:
    name: Build & Scan Docker Image
    runs-on: ubuntu-latest
    needs: run_test

    services:
      docker:
        image: docker:28.2.2-dind
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set environment variables
        run: echo "IMAGE_TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Download latest Trivy
        run: |
          TRIVY_VERSION=$(wget -qO - "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
          wget --no-verbose https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz -O - | tar -zxvf -
          chmod +x trivy

      - name: Build Docker Image
        run: docker buildx build --platform linux/arm64 -t $IMAGE_NAME:$IMAGE_TAG .

      - name: Trivy Scan (Vulnerabilities)
        run: |
          ./trivy image --download-db-only
          ./trivy image --scanners vuln --vuln-type library --severity HIGH,CRITICAL --format template --template "@contrib/gitlab.tpl" -o gl-container-scanning-report.json $IMAGE_NAME:$IMAGE_TAG

      - name: Trivy SBOM (CycloneDX)
        run: ./trivy image --format cyclonedx --output sbom.json $IMAGE_NAME:$IMAGE_TAG

      - name: Upload scan results
        uses: actions/upload-artifact@v4
        with:
          name: scan-results
          path: |
            gl-container-scanning-report.json
            sbom.json
          retention-days: 7

  push_image:
    name: Push Docker Image
    runs-on: ubuntu-latest
    needs: build_and_scan_image

    services:
      docker:
        image: docker:28.2.2-dind
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set environment variables
        run: echo "IMAGE_TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Login to DockerHub
        run: echo "${{ secrets.REGISTRY_PASS }}" | docker login -u "${{ secrets.REGISTRY_USER }}" --password-stdin

      - name: Build Docker Image
        run: docker buildx build --platform linux/arm64 -t $IMAGE_NAME:$IMAGE_TAG .

      - name: Push Docker Image
        run: |
          docker push "$IMAGE_NAME:$IMAGE_TAG"
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest
            docker push $IMAGE_NAME:latest
          fi
